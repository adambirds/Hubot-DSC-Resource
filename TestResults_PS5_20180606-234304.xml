<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="11" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-06-06" time="23:43:06">
  <environment user="appveyor" machine-name="APPVEYOR-VM" cwd="C:\projects\hubot-dsc-resource" user-domain="APPVEYOR-VM" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition1" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="1.2623" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\hubot-dsc-resource\Tests\HubotInstall_Unit_Tests.ps1" executed="True" result="Success" success="True" time="1.2623" asserts="0" description="C:\projects\hubot-dsc-resource\Tests\HubotInstall_Unit_Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="HubotInstall" executed="True" result="Success" success="True" time="1.2623" asserts="0" description="HubotInstall">
            <results>
              <test-suite type="TestFixture" name="Get" executed="True" result="Success" success="True" time="0.1923" asserts="0" description="Get">
                <results>
                  <test-case description="does not throw" name="HubotInstall.Get.does not throw" time="0.1095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="returns a [HubotInstall] class" name="HubotInstall.Get.returns a [HubotInstall] class" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="returns ensure present if BotPath exists" name="HubotInstall.Get.returns ensure present if BotPath exists" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="node modules path should be valid" name="HubotInstall.Get.node modules path should be valid" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="returns ensure absent if BotPath does not exist" name="HubotInstall.Get.returns ensure absent if BotPath does not exist" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Set" executed="True" result="Success" success="True" time="1.07" asserts="0" description="Set">
                <results>
                  <test-case description="throws when botpath is not found" name="HubotInstall.Set.throws when botpath is not found" time="0.3292" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="does not throw when botpath is found and ensure is present" name="HubotInstall.Set.does not throw when botpath is found and ensure is present" time="0.2344" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="throws when npm not found" name="HubotInstall.Set.throws when npm not found" time="0.1026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="does not throw when npm not found" name="HubotInstall.Set.does not throw when npm not found" time="0.0852" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="calls start-process twice to uninstall coffee-script and then npm" name="HubotInstall.Set.calls start-process twice to uninstall coffee-script and then npm" time="0.2245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="calls start-process twice to install coffee-script and then npm install" name="HubotInstall.Set.calls start-process twice to install coffee-script and then npm install" time="0.0942" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>